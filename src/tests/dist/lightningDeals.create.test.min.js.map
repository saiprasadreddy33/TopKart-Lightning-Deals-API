{"version":3,"sources":["lightningDeals.create.test.js"],"names":["request","require","app","lightningDealModel","mockLightningDeal","name","connect","description","discountPercentage","startDate","endDate","afterAll","regeneratorRuntime","async","_context2","prev","next","awrap","deleteMany","beforeAll","stop","it","res","_context3","post","send","set","sent","expect","status","toEqual","body","Date","toISOString","_context4","error","toBeTruthy"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,aAClBC,IAAMD,QAAQ,mBADIA,QAAxB,oBAAMD,iBAAAA,QAAUC,oBAAAA,WAGVE,mBAAqBF,QAAQ,gCAG7BG,kBAJkC,CAKtCC,KALMC,sBAMNC,YAAa,gCACbC,mBAAoB,GANtBC,UAAMN,2BAQJO,QAAS,4BAJTL,SAAM,+BADkB,WAExBE,UAAAA,WAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MACAC,WADAD,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAAA,YAFFI,SAAA,WAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EAAAJ,mBAAAK,MAQSd,mBAAAe,cART,KAAA,EAAA,OAAAJ,EAAAE,KAAA,EAAAJ,mBAAAK,MASEE,cATF,KAAA,EAAA,IAAA,MAAA,OAAAL,EAAAM,YASYC,GAAA,qCAAA,WAAA,IAAAC,EAAA,OAAAV,mBAAAC,MAAA,SAAAU,GAAA,OAAA,OAAAA,EAAAR,KAAAQ,EAAAP,MAAA,KAAA,EAAA,OAAAO,EAAAP,KAAA,EAAAJ,mBAAAK,MAAAjB,QAAAE,KAAAsB,KAAA,0BAAAC,KAAArB,mBAaLsB,IAAI,SAAU,qBAbT,KAAA,EAAAJ,EAAAC,EAAAI,KAAAC,OAAAN,EAAAO,QAAAC,QAAA,KAAAF,OAAAN,EAAAS,KAAA1B,MAAAyB,QAAA1B,kBAAAC,MAAAuB,OAAAN,EAAAS,KAAAxB,aAAAuB,QAAA1B,kBAAAG,aAAAqB,OAAAN,EAAAS,KAAAvB,oBAAAsB,QAAA1B,kBAAAI,oBAIVG,OAAS,IAAAqB,KAAAV,EAAAS,KAAAtB,WAAAwB,eAAAH,QAAA1B,kBAAAK,WAAAmB,OAAA,IAAAI,KAAAV,EAAAS,KAAArB,SAAAuB,eAAAH,QAAA1B,kBAAAM,SAJC,KAAA,EAAA,IAAA,MAAA,OAAAa,EAAAH,YAIDC,GAAA,sEAAA,WAAA,IAAAC,EAAA,OAAAV,mBAAAC,MAAA,SAAAqB,GAAA,OAAA,OAAAA,EAAAnB,KAAAmB,EAAAlB,MAAA,KAAA,EAAA,OAAAkB,EAAAlB,KAAA,EAAAJ,mBAAAK,MAAAjB,QAAAE,KAAAsB,KAAA,0BA4BJC,KAAK,CA5BDpB,KAAA,sBAAAG,mBAAA,GAAAC,UAAA,2BAAAC,QAAA,6BAAAgB,IAAA,SAAA,qBAAA,KAAA,EAAAJ,EAAAY,EAAAP,KAKPC,OAACN,EAAAO,QAAAC,QAAA,KAAsCF,OAAAN,EAAAS,KAAAI,OAAAC,aALhC,KAAA,EAAA,IAAA,MAAA,OAAAF,EAAAd","file":"lightningDeals.create.test.min.js","sourcesContent":["const request = require(\"supertest\");\r\nconst app = require(\"../app\");\r\nconst { connect, disconnect } = require(\"../config/config\");\r\nconst lightningDealModel = require(\"../models/lightningDealModel\");\r\n\r\n// Mock data\r\nconst mockLightningDeal = {\r\n  name: \"Test Lightning Deal\",\r\n  description: \"This is a test lightning deal\",\r\n  discountPercentage: 20,\r\n  startDate: \"2023-05-01T00:00:00.000Z\",\r\n  endDate: \"2023-05-02T00:00:00.000Z\",\r\n};\r\n\r\ndescribe(\"Test Lightning Deal Creation\", () => {\r\n  beforeAll(async () => {\r\n    await connect();\r\n  });\r\n\r\n  afterAll(async () => {\r\n    await lightningDealModel.deleteMany();\r\n    await disconnect();\r\n  });\r\n\r\n  it(\"Should create a new lightning deal\", async () => {\r\n    const res = await request(app)\r\n      .post(\"/api/v1/lightningDeals\")\r\n      .send(mockLightningDeal)\r\n      .set(\"Accept\", \"application/json\");\r\n\r\n    expect(res.status).toEqual(201);\r\n    expect(res.body.name).toEqual(mockLightningDeal.name);\r\n    expect(res.body.description).toEqual(mockLightningDeal.description);\r\n    expect(res.body.discountPercentage).toEqual(\r\n      mockLightningDeal.discountPercentage\r\n    );\r\n    expect(new Date(res.body.startDate).toISOString()).toEqual(\r\n      mockLightningDeal.startDate\r\n    );\r\n    expect(new Date(res.body.endDate).toISOString()).toEqual(\r\n      mockLightningDeal.endDate\r\n    );\r\n  });\r\n\r\n  it(\"Should not create a new lightning deal with missing required fields\", async () => {\r\n    const res = await request(app)\r\n      .post(\"/api/v1/lightningDeals\")\r\n      .send({\r\n        name: \"Test Lightning Deal\",\r\n        discountPercentage: 20,\r\n        startDate: \"2023-05-01T00:00:00.000Z\",\r\n        endDate: \"2023-05-02T00:00:00.000Z\",\r\n      })\r\n      .set(\"Accept\", \"application/json\");\r\n\r\n    expect(res.status).toEqual(400);\r\n    expect(res.body.error).toBeTruthy();\r\n  });\r\n});\r\n"]}