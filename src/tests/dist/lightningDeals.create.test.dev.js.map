{"version":3,"sources":["lightningDeals.create.test.js"],"names":["request","require","app","connect","disconnect","lightningDealModel","mockLightningDeal","name","description","discountPercentage","startDate","endDate","describe","beforeAll","afterAll","deleteMany","it","post","send","set","res","expect","status","toEqual","body","Date","toISOString","error","toBeTruthy"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,QAAD,CAAnB;;eACgCA,OAAO,CAAC,kBAAD,C;IAA/BE,O,YAAAA,O;IAASC,U,YAAAA,U;;AACjB,IAAMC,kBAAkB,GAAGJ,OAAO,CAAC,8BAAD,CAAlC,C,CAEA;;;AACA,IAAMK,iBAAiB,GAAG;AACxBC,EAAAA,IAAI,EAAE,qBADkB;AAExBC,EAAAA,WAAW,EAAE,+BAFW;AAGxBC,EAAAA,kBAAkB,EAAE,EAHI;AAIxBC,EAAAA,SAAS,EAAE,0BAJa;AAKxBC,EAAAA,OAAO,EAAE;AALe,CAA1B;AAQAC,QAAQ,CAAC,8BAAD,EAAiC,YAAM;AAC7CC,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACFV,OAAO,EADL;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,CAAT;AAIAW,EAAAA,QAAQ,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACDT,kBAAkB,CAACU,UAAnB,EADC;;AAAA;AAAA;AAAA,4CAEDX,UAAU,EAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,CAAR;AAKAY,EAAAA,EAAE,CAAC,oCAAD,EAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACrBhB,OAAO,CAACE,GAAD,CAAP,CACfe,IADe,CACV,wBADU,EAEfC,IAFe,CAEVZ,iBAFU,EAGfa,GAHe,CAGX,QAHW,EAGD,kBAHC,CADqB;;AAAA;AACjCC,YAAAA,GADiC;AAMvCC,YAAAA,MAAM,CAACD,GAAG,CAACE,MAAL,CAAN,CAAmBC,OAAnB,CAA2B,GAA3B;AACAF,YAAAA,MAAM,CAACD,GAAG,CAACI,IAAJ,CAASjB,IAAV,CAAN,CAAsBgB,OAAtB,CAA8BjB,iBAAiB,CAACC,IAAhD;AACAc,YAAAA,MAAM,CAACD,GAAG,CAACI,IAAJ,CAAShB,WAAV,CAAN,CAA6Be,OAA7B,CAAqCjB,iBAAiB,CAACE,WAAvD;AACAa,YAAAA,MAAM,CAACD,GAAG,CAACI,IAAJ,CAASf,kBAAV,CAAN,CAAoCc,OAApC,CACEjB,iBAAiB,CAACG,kBADpB;AAGAY,YAAAA,MAAM,CAAC,IAAII,IAAJ,CAASL,GAAG,CAACI,IAAJ,CAASd,SAAlB,EAA6BgB,WAA7B,EAAD,CAAN,CAAmDH,OAAnD,CACEjB,iBAAiB,CAACI,SADpB;AAGAW,YAAAA,MAAM,CAAC,IAAII,IAAJ,CAASL,GAAG,CAACI,IAAJ,CAASb,OAAlB,EAA2Be,WAA3B,EAAD,CAAN,CAAiDH,OAAjD,CACEjB,iBAAiB,CAACK,OADpB;;AAfuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvC,CAAF;AAoBAK,EAAAA,EAAE,CAAC,qEAAD,EAAwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CACtDhB,OAAO,CAACE,GAAD,CAAP,CACfe,IADe,CACV,wBADU,EAEfC,IAFe,CAEV;AACJX,cAAAA,IAAI,EAAE,qBADF;AAEJE,cAAAA,kBAAkB,EAAE,EAFhB;AAGJC,cAAAA,SAAS,EAAE,0BAHP;AAIJC,cAAAA,OAAO,EAAE;AAJL,aAFU,EAQfQ,GARe,CAQX,QARW,EAQD,kBARC,CADsD;;AAAA;AAClEC,YAAAA,GADkE;AAWxEC,YAAAA,MAAM,CAACD,GAAG,CAACE,MAAL,CAAN,CAAmBC,OAAnB,CAA2B,GAA3B;AACAF,YAAAA,MAAM,CAACD,GAAG,CAACI,IAAJ,CAASG,KAAV,CAAN,CAAuBC,UAAvB;;AAZwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxE,CAAF;AAcD,CA5CO,CAAR","sourcesContent":["const request = require(\"supertest\");\r\nconst app = require(\"../app\");\r\nconst { connect, disconnect } = require(\"../config/config\");\r\nconst lightningDealModel = require(\"../models/lightningDealModel\");\r\n\r\n// Mock data\r\nconst mockLightningDeal = {\r\n  name: \"Test Lightning Deal\",\r\n  description: \"This is a test lightning deal\",\r\n  discountPercentage: 20,\r\n  startDate: \"2023-05-01T00:00:00.000Z\",\r\n  endDate: \"2023-05-02T00:00:00.000Z\",\r\n};\r\n\r\ndescribe(\"Test Lightning Deal Creation\", () => {\r\n  beforeAll(async () => {\r\n    await connect();\r\n  });\r\n\r\n  afterAll(async () => {\r\n    await lightningDealModel.deleteMany();\r\n    await disconnect();\r\n  });\r\n\r\n  it(\"Should create a new lightning deal\", async () => {\r\n    const res = await request(app)\r\n      .post(\"/api/v1/lightningDeals\")\r\n      .send(mockLightningDeal)\r\n      .set(\"Accept\", \"application/json\");\r\n\r\n    expect(res.status).toEqual(201);\r\n    expect(res.body.name).toEqual(mockLightningDeal.name);\r\n    expect(res.body.description).toEqual(mockLightningDeal.description);\r\n    expect(res.body.discountPercentage).toEqual(\r\n      mockLightningDeal.discountPercentage\r\n    );\r\n    expect(new Date(res.body.startDate).toISOString()).toEqual(\r\n      mockLightningDeal.startDate\r\n    );\r\n    expect(new Date(res.body.endDate).toISOString()).toEqual(\r\n      mockLightningDeal.endDate\r\n    );\r\n  });\r\n\r\n  it(\"Should not create a new lightning deal with missing required fields\", async () => {\r\n    const res = await request(app)\r\n      .post(\"/api/v1/lightningDeals\")\r\n      .send({\r\n        name: \"Test Lightning Deal\",\r\n        discountPercentage: 20,\r\n        startDate: \"2023-05-01T00:00:00.000Z\",\r\n        endDate: \"2023-05-02T00:00:00.000Z\",\r\n      })\r\n      .set(\"Accept\", \"application/json\");\r\n\r\n    expect(res.status).toEqual(400);\r\n    expect(res.body.error).toBeTruthy();\r\n  });\r\n});\r\n"],"file":"lightningDeals.create.test.dev.js"}