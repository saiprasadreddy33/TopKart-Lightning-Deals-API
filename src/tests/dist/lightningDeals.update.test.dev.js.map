{"version":3,"sources":["lightningDeals.update.test.js"],"names":["request","require","app","generateToken","lightningDealModel","authMiddleware","describe","token","lightningDeal","id","beforeAll","userId","title","description","discountPercentage","startTime","Date","endTime","getTime","create","result","_id","toString","afterAll","deleteOne","it","put","send","response","expect","statusCode","toBe","set","otherUserId","otherToken","body"],"mappings":"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","sourcesContent":["const request = require('supertest');\r\nconst app = require('../../app');\r\nconst { generateToken } = require('../../utils/tokenUtils');\r\nconst lightningDealModel = require('../../models/lightningDealModel');\r\nconst authMiddleware = require('../../middleware/authMiddleware');\r\n\r\ndescribe('PUT /lightning-deals/:id', () => {\r\n  let token;\r\n  let lightningDeal;\r\n  let id;\r\n\r\n  beforeAll(async () => {\r\n    // generate token for authentication\r\n    token = await generateToken({ userId: 'testuser' });\r\n\r\n    // create a new lightning deal in the database\r\n    lightningDeal = {\r\n      title: 'Test Lightning Deal',\r\n      description: 'This is a test lightning deal',\r\n      discountPercentage: 30,\r\n      startTime: new Date(),\r\n      endTime: new Date(new Date().getTime() + 1000 * 60 * 60 * 24), // 24 hours from now\r\n    };\r\n    const result = await lightningDealModel.create(lightningDeal);\r\n    id = result._id.toString();\r\n  });\r\n\r\n  afterAll(async () => {\r\n    // delete the lightning deal from the database\r\n    await lightningDealModel.deleteOne({ _id: id });\r\n  });\r\n\r\n  it('should return 401 unauthorized if user is not authenticated', async () => {\r\n    const response = await request(app)\r\n      .put(`/lightning-deals/${id}`)\r\n      .send({ title: 'Updated Title' });\r\n    expect(response.statusCode).toBe(401);\r\n  });\r\n\r\n  it('should return 404 not found if lightning deal does not exist', async () => {\r\n    const response = await request(app)\r\n      .put(`/lightning-deals/nonexistent-id`)\r\n      .set('Authorization', `Bearer ${token}`)\r\n      .send({ title: 'Updated Title' });\r\n    expect(response.statusCode).toBe(404);\r\n  });\r\n\r\n  it('should return 403 forbidden if user is not authorized to update lightning deal', async () => {\r\n    // create a new user to generate a different token for authentication\r\n    const otherUserId = 'otheruser';\r\n    const otherToken = await generateToken({ userId: otherUserId });\r\n\r\n    const response = await request(app)\r\n      .put(`/lightning-deals/${id}`)\r\n      .set('Authorization', `Bearer ${otherToken}`)\r\n      .send({ title: 'Updated Title' });\r\n    expect(response.statusCode).toBe(403);\r\n  });\r\n\r\n  it('should update lightning deal and return 200 ok if user is authorized to update lightning deal', async () => {\r\n    const response = await request(app)\r\n      .put(`/lightning-deals/${id}`)\r\n      .set('Authorization', `Bearer ${token}`)\r\n      .send({ title: 'Updated Title' });\r\n    expect(response.statusCode).toBe(200);\r\n    expect(response.body.title).toBe('Updated Title');\r\n  });\r\n});\r\n"],"file":"lightningDeals.update.test.dev.js"}