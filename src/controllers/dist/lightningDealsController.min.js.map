{"version":3,"sources":["lightningDealsController.js"],"names":["fs","require","moment","lightningDealService","tokenUtils","JSON","readFileSync","isDealExpired","deal","expiryTime","lightningDealsData","req","dealId","params","id","find","res","status","json","error","filter","unexpiredDeals","getLightningDealById","placeOrder","module","exports","getLightningDeals","checkDealExpiry"],"mappings":"aAAA,IAAMA,GAAKC,QAAQ,MACbC,OAASD,QAAQ,UADfE,qBAARF,QAAA,oCAGMG,WAAaH,QAAQ,uBADrBE,mBAAoBE,KAAGJ,MAAQD,GAAAM,aAAA,wBAOrC,SAASC,cAAcC,GACrB,IAAMC,EAAaP,OAAOM,EAAKC,WAAY,uBAJ7C,OAAIC,SAAAA,QAAqBL,GAKvB,SAAOH,gBAAAS,EAAiBF,EAAAA,GAG1B,IAAAG,EAAAD,EAAAE,OAAAC,GAGQN,EAAOE,mBAAmBK,KAAK,SAACP,GAAD,OAAUA,EAAKM,KAAOF,IAF7D,OAAAJ,EAEED,cAAAC,GAOSQ,EAAIC,OAAO,KAAKC,KAAK,CAAEC,MAAO,0BAJPA,IAJ1BP,EAASD,OAAIE,KAAOC,KAA1B,CAAAK,MAAA,mBAOA,SAAIZ,kBAAqBI,EAAAK,GACOG,IAAAA,EAAOT,mBAAAU,OAAA,SAAAZ,GAAA,OAAAD,cAAAC,KAATQ,EAA5BE,KAAAG,GAIH,SAEDC,qBAAAX,EAAAK,GASE,IAAMJ,EAASD,EAAIE,OAAOC,GACpBN,EAAOE,mBAAmBK,KAAK,SAACP,GAAD,OAAUA,EAAKM,KAAOF,IAR3D,OAAAJ,EAEIU,cAAKG,GAGXL,EAAAC,OAAA,KAAAC,KAAA,CAAAC,MAAA,0BACAH,EAAAE,KAASI,GALDD,EAAAA,OAAc,KAAGX,KAAAA,CAAAA,MAAkB,mBAOJ,SAArCa,WAAAZ,EAAAK,GAeA,IAAMJ,EAASD,EAAIE,OAAOC,GAbrBN,EAAME,mBAAAK,KAAA,SAAAP,GAAA,OAAAA,EAAAM,KAAAF,IACqBO,OAAAA,EAG5BZ,cAAcC,GACTQ,EAAIC,OAAO,KAAKC,KAAK,CAAAC,MAAA,0BAG9BH,EAAIE,KAAKV,CAAAA,QAAT,8BAPEQ,EAAAC,OAAA,KAAAC,KAAA,CAAAC,MAAA,mBA4BJK,OAAOC,QAAU,CAjBjBC,kBAAAA,kBACEJ,qBAAAA,qBACAC,WAAAA,WAAqCI,gBAAAA","file":"lightningDealsController.min.js","sourcesContent":["const fs = require('fs');\r\nconst moment = require('moment');\r\nconst lightningDealService = require('../services/lightningDealService');\r\nconst tokenUtils = require('../utils/tokenUtils');\r\n\r\n// Read lightning deals data from JSON file\r\nlet lightningDealsData = JSON.parse(fs.readFileSync('lightningDeals.json'));\r\n\r\n// Function to check if a lightning deal has expired\r\nfunction isDealExpired(deal) {\r\n  const expiryTime = moment(deal.expiryTime, 'YYYY-MM-DD HH:mm:ss');\r\n  return moment().isAfter(expiryTime);\r\n}\r\n\r\n// Middleware function to check if a lightning deal has expired\r\nfunction checkDealExpiry(req, res, next) {\r\n  const dealId = req.params.id;\r\n  const deal = lightningDealsData.find((deal) => deal.id === dealId);\r\n\r\n  if (!deal) {\r\n    return res.status(404).json({ error: 'Deal not found' });\r\n  }\r\n\r\n  if (isDealExpired(deal)) {\r\n    return res.status(400).json({ error: 'Deal has expired' });\r\n  }\r\n\r\n  next();\r\n}\r\n\r\n// Controller function to get all lightning deals\r\nfunction getLightningDeals(req, res) {\r\n  // Filter out expired deals\r\n  const unexpiredDeals = lightningDealsData.filter((deal) => !isDealExpired(deal));\r\n  res.json(unexpiredDeals);\r\n}\r\n\r\n// Controller function to get a single lightning deal by ID\r\nfunction getLightningDealById(req, res) {\r\n  const dealId = req.params.id;\r\n  const deal = lightningDealsData.find((deal) => deal.id === dealId);\r\n\r\n  if (!deal) {\r\n    return res.status(404).json({ error: 'Deal not found' });\r\n  }\r\n\r\n  if (isDealExpired(deal)) {\r\n    return res.status(400).json({ error: 'Deal has expired' });\r\n  }\r\n\r\n  res.json(deal);\r\n}\r\n\r\n// Controller function to place an order for a lightning deal\r\nfunction placeOrder(req, res) {\r\n  const dealId = req.params.id;\r\n  const deal = lightningDealsData.find((deal) => deal.id === dealId);\r\n\r\n  if (!deal) {\r\n    return res.status(404).json({ error: 'Deal not found' });\r\n  }\r\n\r\n  if (isDealExpired(deal)) {\r\n    return res.status(400).json({ error: 'Deal has expired' });\r\n  }\r\n\r\n  // Process order logic here...\r\n\r\n  res.json({ message: 'Order placed successfully' });\r\n}\r\n\r\nmodule.exports = {\r\n  getLightningDeals,\r\n  getLightningDealById,\r\n  placeOrder,\r\n  checkDealExpiry\r\n};\r\n"]}