"use strict";var fs=require("fs"),moment=require("moment"),lightningDealService=require("../services/lightningDealService"),tokenUtils=require("../utils/tokenUtils"),lightningDealsData=JSON.parse(fs.readFileSync("lightningDeals.json"));function isDealExpired(e){var i=moment(e.expiryTime,"YYYY-MM-DD HH:mm:ss");return moment().isAfter(i)}function checkDealExpiry(e,i,n){var r=e.params.id,t=lightningDealsData.find(function(e){return e.id===r});return t?isDealExpired(t)?i.status(400).json({error:"Deal has expired"}):void n():i.status(404).json({error:"Deal not found"})}function getLightningDeals(e,i){var n=lightningDealsData.filter(function(e){return!isDealExpired(e)});i.json(n)}function getLightningDealById(e,i){var n=e.params.id,r=lightningDealsData.find(function(e){return e.id===n});return r?isDealExpired(r)?i.status(400).json({error:"Deal has expired"}):void i.json(r):i.status(404).json({error:"Deal not found"})}function placeOrder(e,i){var n=e.params.id,r=lightningDealsData.find(function(e){return e.id===n});return r?isDealExpired(r)?i.status(400).json({error:"Deal has expired"}):void i.json({message:"Order placed successfully"}):i.status(404).json({error:"Deal not found"})}module.exports={getLightningDeals:getLightningDeals,getLightningDealById:getLightningDealById,placeOrder:placeOrder,checkDealExpiry:checkDealExpiry};
//# sourceMappingURL=lightningDealsController.min.js.map
